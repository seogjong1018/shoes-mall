{"version":3,"sources":["../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/react-transition-group/esm/CSSTransition.js","Detail.js"],"names":["addClass","element","className","classList","add","hasClass","setAttribute","baseVal","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","remove","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","node","classes","split","forEach","c","removeOneClass","CSSTransition","_React$Component","_this","_len","args","Array","_key","concat","appliedClasses","appear","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","props","onEntering","_this$resolveArgument2","type","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","current","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","phase","scrollTop","addOneClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","_objectWithoutPropertiesLoose","React","createElement","Transition","Component","defaultProps","propTypes","Box","styled","div","Title","h4","color","Button","button","Others","Alert","TabContent","useEffect","setSwitch","Tab","Info","Inventory","connect","state","console","log","useState","Hide","setHide","setTab","Switch","Timer","setTimeout","clearTimeout","history","useHistory","id","useParams","src","Shoes","width","title","content","price","onClick","setInventory","dispatch","data","name","quantity","push","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","in","timeout"],"mappings":"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","file":"static/js/3.0f5cb3b7.chunk.js","sourcesContent":["import hasClass from './hasClass';\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    ;\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"./Detail.scss\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Box = styled.div`\r\n  padding: 20px;\r\n`;\r\nconst Title = styled.h4`\r\n  font-size: 25px;\r\n  color: ${(props) => props.color};\r\n`;\r\nconst Button = styled.button`\r\n  margin: 0 5px;\r\n`;\r\nconst Others = styled.div`\r\n  text-align: left;\r\n  margin-top: 40px;\r\n`;\r\n\r\nconst Alert = () => {\r\n  return (\r\n    <div className=\"my-alert2\">\r\n      <p>재고가 얼마 남지 않았습니다.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Detail = (props) => {\r\n  const [Hide, setHide] = useState(true);\r\n  const [Tab, setTab] = useState(0);\r\n  const [Switch, setSwitch] = useState(false); // transition 변수\r\n\r\n  useEffect(() => {\r\n    const Timer = setTimeout(() => {\r\n      setHide(false);\r\n    }, 2000);\r\n    return () => {\r\n      clearTimeout(Timer);\r\n    };\r\n  }, []);\r\n\r\n  let history = useHistory(); // history는 방문기록을 저장해놓는 오브젝트\r\n  let { id } = useParams(); //중괄호에 사용자가 입력한 URL 파라미터들이 들어있음 => id로 저장한거임\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Box>\r\n        <Title className=\"black\">상세페이지</Title>\r\n      </Box>\r\n\r\n      {Hide === true ? <Alert /> : null}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img\r\n            src={\r\n              \"https://codingapple1.github.io/shop/shoes\" +\r\n              (props.Shoes[id].id + 1) +\r\n              \".jpg\"\r\n            }\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{props.Shoes[id].title}</h4>\r\n          <p>{props.Shoes[id].content}</p>\r\n          <p>{props.Shoes[id].price}</p>\r\n\r\n          <Info Inventory={props.Inventory} />\r\n\r\n          <Button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              props.setInventory([9, 10, 11]);\r\n              props.dispatch({\r\n                type: \"add\",\r\n                data: {\r\n                  id: props.Shoes[id].id,\r\n                  name: props.Shoes[id].title,\r\n                  quantity: 1,\r\n                },\r\n              });\r\n              history.push(\"/cart\"); //페이지 이동을 강제로 함\r\n            }}\r\n          >\r\n            주문하기\r\n          </Button>\r\n          {/* goBack함수는 뒤로가기 함수임 */}\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              history.goBack();\r\n            }}\r\n          >\r\n            뒤로가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* eventKey는 부트스트랩 문법, 누를수있는 버튼이 완성됨 */}\r\n      {/* defaultActiveKey는 페이지 방문시 link-0을 누른상태를 불러옴 */}\r\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-0\"\r\n            onClick={() => {\r\n              setSwitch(false);\r\n              setTab(0);\r\n            }}\r\n          >\r\n            상세정보\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-1\"\r\n            onClick={() => {\r\n              setSwitch(false);\r\n              setTab(1);\r\n            }}\r\n          >\r\n            반품/교환정보\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n      <CSSTransition in={Switch} classNames=\"wow\" timeout={500}>\r\n        <TabContent Tab={Tab} setSwitch={setSwitch} />\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TabContent = (props) => {\r\n  // TabContent가 로드되거나 변경될 때 아래 useEffect를 통해 Switch true로 변경\r\n  useEffect(() => {\r\n    props.setSwitch(true);\r\n  });\r\n\r\n  if (props.Tab === 0) {\r\n    return (\r\n      <Others>\r\n        <p>1. 상품상태 : 새상품</p>\r\n        <p>2. 원산지 : 한국</p>\r\n        <p>3. 배송 기간 : 2 ~ 3일</p>\r\n      </Others>\r\n    );\r\n  } else if (props.Tab === 1) {\r\n    return (\r\n      <Others>\r\n        <p>1. 구매자 단순 변심은 상품 수령후 7일 이내</p>\r\n        <p>\r\n          2. 표시/광고와 상이, 상품하자의 경우 상품 수령 후 3개월 이내 혹은\r\n          표시/광고와 다른 사실을 안 날로부터 30일 이내.\r\n          <br /> 둘 중 하나 경과시 반품/교환 불가\r\n        </p>\r\n      </Others>\r\n    );\r\n  }\r\n};\r\n\r\nconst Info = (props) => {\r\n  return <p>재고 : {props.Inventory[0]}</p>;\r\n};\r\n\r\nconst makeProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    state: state,\r\n  };\r\n};\r\n\r\nexport default connect(makeProps)(Detail);\r\n// export default Detail;\r\n"],"sourceRoot":""}